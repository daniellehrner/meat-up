<?php

namespace {{ entityBundleNameSpace }}\Controller;

use Symfony\Component\Form\Form;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;

use {{ entityBundleNameSpace }}\Entity\{{ name }};
use {{ entityBundleNameSpace }}\Form\Type\{{ name }}Type;

class {{ name }}Controller extends Controller
{
    const TITLE = '{{ name | capitalize }}';
    const TITLE_PLURAL = '{{ plural }}';
    const PATH_INDEX = 'admin_{{ name | lower }}';
    const FORM_TYPE = {{ name }}Type::class;
    const REPOSITORY = '{{ entityBundleName }}:{{ name }}';

    /**
     * @Route("/admin/{{ name | lower }}", name="admin_{{ name | lower }}")
     */
    public function indexAction()
    {
        ${{ name | lower }} = $this->getDoctrine()
            ->getRepository(self::REPOSITORY)
            ->findAll();

        return $this->render(
            'admin/{{ name }}/index.html.twig',
            array(
                '{{ name | lower }}' => ${{ name | lower }},
                'title' => self::TITLE,
                'titlePlural' => self::TITLE_PLURAL,
                'indexPath' => self::PATH_INDEX,
            )
        );
    }

    /**
    * @Route("/admin/{{ name | lower }}/insert", name="admin_{{ name | lower }}_insert")
    * @param Request $request
    * @return \Symfony\Component\HttpFoundation\RedirectResponse|Response
    */
    public function insertAction(Request $request)
    {
        ${{ name | lower }} = new {{ name }}();
        $form = $this->createForm(self::FORM_TYPE, ${{ name | lower }});

        $result = $this->handleFormUpload($form, $request);

        if($result)
        {
            $this->addFlash('success', self::TITLE . ' erfolgreich erstellt!');
            return $this->redirectToRoute(self::PATH_INDEX);
        }

        return $this->render(
            'admin/{{ name }}/insert.html.twig',
            array(
                'form' => $form->createView(),
                'title' => self::TITLE,
                'titlePlural' => self::TITLE_PLURAL,
                'indexPath' => self::PATH_INDEX,
            )
        );
    }

    /**
    * @Route("/admin/{{ name | lower }}/update/{{ '{'~doctrineIndexName~'}' }}", name="admin_{{ name | lower }}_update")
    * @param Request $request
    * @param {{ name }} ${{ name | lower }}
    * @param int $id
    * @return \Symfony\Component\HttpFoundation\RedirectResponse|Response
    */
    public function updateAction(Request $request, {{ name }} ${{ name | lower }}, $id)
    {
        $form = $this->createForm(self::FORM_TYPE, ${{ name | lower }});

        $result = $this->handleFormUpload($form, $request);

        if ($result)
        {
            $this->addFlash('success', self::TITLE . ' erfolgreich geändert!');
            return $this->redirectToRoute(self::PATH_INDEX);
        }

        return $this->render(
            'admin/{{ name }}/update.html.twig',
            array(
                'form' => $form->createView(),
                'id' => $id,
                'title' => self::TITLE,
                'titlePlural' => self::TITLE_PLURAL,
                'indexPath' => self::PATH_INDEX,
                '{{ name | lower }}' => ${{ name | lower }}
            )
        );
    }

    /**
    * @Route("/admin/{{ name | lower }}/delete/{{ '{'~doctrineIndexName~'}' }}", name="admin_{{ name | lower }}_delete")
    * @param {{ name }} ${{ name | lower }}
    * @return \Symfony\Component\HttpFoundation\RedirectResponse
    */
    public function deleteAction({{ name }} ${{ name | lower }})
    {
        $em = $this->getDoctrine()->getManager();

        $em->remove(${{ name | lower }});
        $em->flush();

        $this->addFlash('success', self::TITLE . ' erfolgreich gelöscht!');

        return $this->redirectToRoute(self::PATH_INDEX);
    }

    /**
    * @param Form $form
    * @param $request
    * @return bool
    */
    public function handleFormUpload($form, $request)
    {
        $form->handleRequest($request);
        if ($form->isValid() && $form->isSubmitted())
        {
            ${{ name | lower }} = $form->getData();

            $em = $this->getDoctrine()->getManager();
            $em->persist(${{ name | lower }});
            $em->flush();

            return true;
        }

        return false;
    }

{% if sortablePositionName is not null %}
    /**
    * @Route("/admin/{{ name | lower }}/up/{{ '{'~doctrineIndexName~'}' }}", name="admin_{{ name | lower }}_up")
    * @param {{ name }} ${{ name | lower }}
    * @return \Symfony\Component\HttpFoundation\RedirectResponse
    */
    public function movePositionUp({{ name }} ${{ name | lower }})
    {
        ${{ name | lower }}->setPosition(${{ name | lower }}->getPosition() - 1);

        $em = $this->getDoctrine()->getManager();
        $em->persist(${{ name | lower }});
        $em->flush();

        return $this->redirectToRoute(self::PATH_INDEX);
    }

    /**
    * @Route("/admin/{{ name | lower }}/down/{{ '{'~doctrineIndexName~'}' }}", name="admin_{{ name | lower }}_down")
    * @param {{ name }} ${{ name | lower }}
    * @return \Symfony\Component\HttpFoundation\RedirectResponse
    */
    public function movePositionDown({{ name }} ${{ name | lower }})
    {
        ${{ name | lower }}->set{{ sortablePositionName | capitalize }}(${{ name | lower }}->get{{ sortablePositionName | capitalize }}() + 1);

        $em = $this->getDoctrine()->getManager();
        $em->persist(${{ name | lower }});
        $em->flush();

        return $this->redirectToRoute(self::PATH_INDEX);
    }
{% endif %}
}